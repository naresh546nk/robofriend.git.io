{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/CardList.js","components/SearchRobot.js","components/ErrorBoundary.js","components/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","user","className","alt","src","id","name","email","CardList","robots","map","i","SearchRobot","searchField","searchChange","type","placeholder","onChange","ErrorBoundary","props","state","hasError","error","errorInfo","console","log","this","children","Component","App","event","setState","target","value","fetch","res","json","filterRobot","filter","robot","toLocaleLowerCase","includes","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2KAYeA,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,mCCMCQ,MAZf,YAAuB,IAARC,EAAO,EAAPA,KACX,OACI,sBAAKC,UAAU,uDAAf,UACI,qBAAMC,IAAI,UAAUC,IAAG,gCAA2BH,EAAKI,GAAhC,cACvB,wCAAWJ,EAAKK,QAChB,4CAAeL,EAAKM,aCYjBC,MAdf,YAMI,OANwB,EAATC,OAEUC,KAAI,SAACT,EAAKU,GAC/B,OAAO,cAAC,EAAD,CAAeV,KAAMA,GAATU,OCMZC,MAVf,YAAiD,EAA3BC,YAA4B,IAAhBC,EAAe,EAAfA,aAC9B,OACI,gCACQ,uBAAOZ,UAAU,UAAUa,KAAK,SAASC,YAAY,oBAAqBC,SAAUH,IACpF,wBAAQZ,UAAU,UAAlB,yBCsBDgB,E,kDAzBX,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CAAEC,UAAU,GAFR,E,qDAUnB,SAAkBC,EAAOC,GAEvBC,QAAQC,IAAIH,EAAOC,K,oBAGrB,WACE,OAAIG,KAAKN,MAAMC,SAEN,uDAGFK,KAAKP,MAAMQ,Y,uCAhBpB,SAAgCL,GAE9B,MAAO,CAAED,UAAU,O,GARGO,aCiEbC,G,wDAtDX,aAAc,IAAD,8BACT,gBAeJf,aAAc,SAACgB,GACP,EAAKC,SAAS,CAAClB,YAAYiB,EAAME,OAAOC,SAf5C,EAAKb,MAAM,CACPX,OAAQ,GACRI,YAAY,IAJP,E,qDASb,WAAoB,IAAD,OACfqB,MAAM,8CACLxC,MAAK,SAAAyC,GAAQ,OAAQA,EAAIC,UACzB1C,MAAK,SAAAO,GAAI,OAAG,EAAK8B,SAAS,CAACtB,OAAOR,S,oBAW3C,WAAS,IAAD,OACEoC,EAAYX,KAAKN,MAAMX,OAAO6B,QAAO,SAAAC,GACvC,OAAOA,EAAMjC,KAAKkC,oBAAoBC,SAAS,EAAKrB,MAAMP,YAAY2B,wBAG1E,OAA8B,IAA3Bd,KAAKN,MAAMX,OAAOiC,OACV,qBAAKxC,UAAU,WAKtB,gCAEI,sBAAKA,UAAU,KAAf,UACI,mCAAM,qBAAKA,UAAU,SAAf,mIACN,cAAC,EAAD,CAAcY,aAAcY,KAAKZ,kBAGrC,cAAC,EAAD,UACA,cAAC,EAAD,CAAUL,OAAQ4B,a,GA3CVT,c,MCNpBe,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BxD,M","file":"static/js/main.9b3d628e.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\r\nfunction Card({user}) {\r\n    return (\r\n        <div className='tc bg-light-green dib br3 pa3 ma3 grow bw-3 shadow-5'>\r\n            <img  alt=\"robotes\" src={`https://robohash.org/ ${user.id}?200*200`}/>\r\n            <h3>Name: {user.name}</h3>\r\n            <h4>Email id: {user.email}</h4>\r\n       </div>\r\n    );\r\n    \r\n    \r\n}\r\n\r\nexport default Card;","import React from 'react'\r\nimport Card from './Card'\r\n\r\n\r\nfunction CardList({robots}) {\r\n\r\n    const robotsArray=robots.map((user,i) =>{\r\n        return <Card  key={i} user={user}/>\r\n    });\r\n\r\n    return(robotsArray)\r\n \r\n\r\n\r\n\r\n    \r\n}\r\n\r\nexport default CardList;","import React from 'react'\r\n\r\n\r\nfunction SearchRobot({searchField,searchChange}) {\r\n    return (\r\n        <div>\r\n                <input className=\"ma2 pa1\" type=\"search\" placeholder=\"Search any things\"  onChange={searchChange} />\r\n                <button className='pa1 ma2'> Search</button>\r\n        </div>\r\n\r\n    );\r\n    \r\n}\r\nexport default SearchRobot;","import React, { Component } from 'react'\r\n\r\n\r\nclass ErrorBoundary extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = { hasError: false };\r\n    }\r\n  \r\n    static getDerivedStateFromError(error) {\r\n      // Update state so the next render will show the fallback UI.\r\n      return { hasError: true };\r\n    }\r\n  \r\n    componentDidCatch(error, errorInfo) {\r\n      // You can also log the error to an error reporting service\r\n      console.log(error, errorInfo);\r\n    }\r\n  \r\n    render() {\r\n      if (this.state.hasError) {\r\n        // You can render any custom fallback UI\r\n        return <h1>Something went wrong.</h1>;\r\n      }\r\n  \r\n      return this.props.children; \r\n    }\r\n  }\r\n\r\nexport default ErrorBoundary;\r\n\r\n\r\n","import React, {Component} from 'react'\r\n\r\nimport CardList from './CardList'\r\n\r\nimport SearchRobot from './SearchRobot'\r\n\r\nimport  ErrorBoundary from './ErrorBoundary'\r\n\r\nimport './App.css'\r\n\r\n\r\n\r\n\r\nclass   App extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            robots: [],\r\n            searchField:''\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(res => {return  res.json()})\r\n        .then(user =>this.setState({robots:user}))\r\n    }\r\n    \r\n\r\n    searchChange =(event)=>{\r\n            this.setState({searchField:event.target.value})\r\n\r\n            //console.log(filterRobot);\r\n    }\r\n\r\n\r\nrender(){\r\n    const filterRobot=this.state.robots.filter(robot=>{\r\n        return robot.name.toLocaleLowerCase().includes(this.state.searchField.toLocaleLowerCase());\r\n    });\r\n\r\n    if(this.state.robots.length===0){\r\n        return <div className=\"loader\"></div>\r\n\r\n         \r\n    }\r\n    return ( \r\n        <div>\r\n            \r\n            <div className=\"tc\">\r\n                <h1 > <div className=\"shadow\">‚ÑùùïÜùîπùïÜùîΩ‚ÑùùïÄùîº‚Ñïùîªùïä</div></h1>\r\n                <SearchRobot  searchChange={this.searchChange} />\r\n            </div>\r\n            \r\n            <ErrorBoundary>\r\n            <CardList robots={filterRobot}/>\r\n\r\n            </ErrorBoundary>\r\n               \r\n            \r\n         \r\n        </div>\r\n      \r\n         );\r\n    } \r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport App from './components/App'\n\nimport  'tachyons'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}